///////////////////////////////////////////////////////////////////////////////
// VERSION HISTORY:
///////////////////////////////////////////////////////////////////////////////

 - v14
    - Course section 15: Refactoring our Code
        - Separated wall projection from main.c into wall.h/wall.c files
        - Created color_t type definition (same as uint32_t) for better
          readability
        - Refactored normalizeAngle() to modify the parameter by reference
        - Refactored the ray-facing direction variables as functions
        - Added function to modify intensity of color and implemented it
          in the wall projection rendering to darken the vertically facing
          walls
        (section completed)

 - v13
    - Course section 14: Rendering Lines
        - Added line drawing function using DDA
        (section completed)

 - v12
    - Course section 13: Refactoring Project Files
        - Implemented the built-in C bool support from <stdbool.h>
        - Changed window size constants and seperated render resolution
          from display resolution (rendering at lower resolution and 
          displaying full screen)
        - Separated the main file into multiple .h/.c files:
            - graphics
            - map
            - player
        - Added drawRect() function for drawing a rectangle using
          the color buffer
        (section completed)

 - v11
    - Course section 13: Fixing the Angle Increment Distortion
        (section completed)

 - v10
    - Course section 12: Wall textures
        - Added textures for the walls
        (section completed)

 - v9
    - Course section 11: Wall projection
        - Added wall projection
        - Added colors to ceiling and floor
        (section completed)

 - v8
    - Course section 10: Color Buffer
        - Added color buffer
        (section completed)

 - v7
    - Course section 9: Casting Rays in our C Project
        - Added ray casting code
        - Added rendering of the cast rays
        (section completed)

 - v6
    - Course section 8: Map and Player Movement
        - Added the map and drawing of the map
        - Added player and drawing of the player
        - Added player movement with wall collision
        (section completed)

 - v5
    - Course section 7: Creating a Game Loop
        - Implemented a fixed time step game loop
        (section completed)

 - v4
    - Course section 6: Starting our C Project
        - Set up of the project in C with SDL
        (section completed)

 - v3
    - Course section 5: Rendering walls
        - Shrunk the 2D map down to 0.2 size to act as a minimap in 
          the top left corner
        - Implemented pseudo 3D rendering of walls
        (section completed)

 - v2
    - Course section 4: Ray Casting
        - Added casting of rays
          - Defining FOV
          - FOV ray increments
          - Finding horizontal intersections and wall hit
          - Finding vertical intersections and wall hit
          - Finding distance to wall hits and selecting the shortest distance
        (section completed)

 - v1
    - Course section 1: Introduction and Motivations
        (section completed)
    - Course section 2: Trigonometry Review
        (section completed)
    - Course section 3: 2D Map and Player Movement
        - Started the simple JavaScript prototype in the folder js-prototype 
          with a index.html, styles.css, p5.js (library for rendering), 
          and raycast.js.
        - Added the 2D map grid
        - Added the player to the 2D map
        - Added movement and collision to the player
        (section completed)
